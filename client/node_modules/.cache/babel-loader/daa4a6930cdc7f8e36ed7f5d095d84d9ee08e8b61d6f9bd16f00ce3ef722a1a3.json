{"ast":null,"code":"var _jsxFileName = \"D:\\\\SecureExplorer\\\\client\\\\src\\\\user\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from './Navbar';\nimport Sos from './Sos';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const mapRef = useRef(null);\n  const [data, setData] = useState({});\n  const [error, setError] = useState(null);\n  const [sourceCoordinates, setSourceCoordinates] = useState(null);\n  const [destinationCoordinates, setDestinationCoordinates] = useState(null);\n  const [userIconMarker, setUserIconMarker] = useState(null);\n  const [routingControl, setRoutingControl] = useState(null);\n  const [isNavigated, setIsNavigated] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const fetchData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/viewtripbyid', {\n        id: location.state.id\n      });\n      setData(response.data);\n      if (response.data.sourceStation && response.data.destinationStation) {\n        const sourceResult = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${response.data.sourceStation}`);\n        const destinationResult = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${response.data.destinationStation}`);\n        if (sourceResult.data.length > 0 && destinationResult.data.length > 0) {\n          setSourceCoordinates([parseFloat(sourceResult.data[0].lat), parseFloat(sourceResult.data[0].lon)]);\n          setDestinationCoordinates([parseFloat(destinationResult.data[0].lat), parseFloat(destinationResult.data[0].lon)]);\n        } else {\n          setError(\"Source or destination coordinates not found\");\n        }\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [location.state.id]);\n  useEffect(() => {\n    if (sourceCoordinates && destinationCoordinates) {\n      if (!mapRef.current) {\n        mapRef.current = L.map('map').setView(sourceCoordinates, 11);\n        const mapLink = \"<a href='http://openstreetmap.org'>OpenStreetMap</a>\";\n        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n          attribution: 'Leaflet &copy; ' + mapLink + ', contribution',\n          maxZoom: 18\n        }).addTo(mapRef.current);\n      }\n      const map = mapRef.current;\n\n      // Add polyline to show shortest road between source and destination\n      const control = L.Routing.control({\n        waypoints: [L.latLng(sourceCoordinates), L.latLng(destinationCoordinates)],\n        routeWhileDragging: true,\n        lineOptions: {\n          styles: [{\n            color: 'red',\n            opacity: 0.7,\n            weight: 5\n          }]\n        },\n        createMarker: function () {\n          return null;\n        }\n      });\n      setRoutingControl(control.addTo(map));\n\n      // Add marker for source and destination\n      L.marker(sourceCoordinates).addTo(map).bindPopup(`<b>Source:</b> ${data.sourceStation}`);\n      L.marker(destinationCoordinates).addTo(map).bindPopup(`<b>Destination:</b> ${data.destinationStation}`);\n\n      // Initialize user icon marker\n      const userIcon = L.icon({\n        iconUrl: data.photo,\n        iconSize: [40, 40]\n      });\n      setUserIconMarker(L.marker(sourceCoordinates, {\n        icon: userIcon\n      }).addTo(map));\n      map.fitBounds([sourceCoordinates, destinationCoordinates]);\n    }\n  }, [sourceCoordinates, destinationCoordinates]);\n  useEffect(() => {\n    if (userIconMarker && routingControl) {\n      // Animate user icon marker along the route\n      routingControl.on('routesfound', function (e) {\n        const route = e.routes[0];\n        const index = 0;\n        const segment = route.coordinates[index];\n        moveMarker(segment, index + 1, route);\n      });\n    }\n  }, [userIconMarker, routingControl, sourceCoordinates, destinationCoordinates]);\n  const displayCoordinates = async () => {\n    if (userIconMarker) {\n      const coordinates = userIconMarker.getLatLng();\n      const response = await axios.get(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${coordinates.lat}&lon=${coordinates.lng}`);\n      const placeInfo = response.data.address;\n      const stateDistrict = placeInfo.state_district;\n      try {\n        const userId = data._id;\n        await axios.post('http://localhost:5000/auth/submitalert', {\n          userId: userId,\n          coordinates: {\n            stateDistrict: stateDistrict\n          }\n        });\n      } catch (error) {\n        console.error('Error saving SOS request:', error);\n      }\n      setIsNavigated(true);\n      alert(`You are in ${stateDistrict}. Help will arrive in a few minutes.`);\n      navigate('/userhelp', {\n        state: {\n          data\n        }\n      });\n    }\n  };\n  let destinationReached = false;\n  async function moveMarker(segment, index, route) {\n    setTimeout(async function () {\n      if (!isNavigated) {\n        userIconMarker.setLatLng(L.latLng(segment.lat, segment.lng));\n        if (index < route.coordinates.length) {\n          moveMarker(route.coordinates[index], index + 1, route);\n        } else {\n          try {\n            if (!destinationReached) {\n              toast.success(\"You have reached the destination successfully!\", {\n                toastId: 'destinationToast',\n                onClose: async () => {\n                  destinationReached = true;\n                  try {\n                    const userId = data._id;\n                    await axios.post('http://localhost:5000/auth/submitstatus', {\n                      userId: userId,\n                      tripStatus: 1\n                    });\n                    console.log(\"Navigating to '/userhistory'...\");\n                    navigate('/userhistory');\n                  } catch (error) {\n                    console.error(error);\n                  }\n                  destinationReached = true;\n                }\n              });\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      }\n    }, 2);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: {\n          width: '100%',\n          height: '100vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sos, {\n      displayCoordinates: displayCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MapComponent, \"KmIN8O9W3AUsrUn+iqFNH3mNUdM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","Sos","axios","L","useLocation","useNavigate","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","MapComponent","_s","mapRef","data","setData","error","setError","sourceCoordinates","setSourceCoordinates","destinationCoordinates","setDestinationCoordinates","userIconMarker","setUserIconMarker","routingControl","setRoutingControl","isNavigated","setIsNavigated","navigate","location","fetchData","response","post","id","state","sourceStation","destinationStation","sourceResult","get","destinationResult","length","parseFloat","lat","lon","message","current","map","setView","mapLink","tileLayer","attribution","maxZoom","addTo","control","Routing","waypoints","latLng","routeWhileDragging","lineOptions","styles","color","opacity","weight","createMarker","marker","bindPopup","userIcon","icon","iconUrl","photo","iconSize","fitBounds","on","e","route","routes","index","segment","coordinates","moveMarker","displayCoordinates","getLatLng","lng","placeInfo","address","stateDistrict","state_district","userId","_id","console","alert","destinationReached","setTimeout","setLatLng","success","toastId","onClose","tripStatus","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","_c","$RefreshReg$"],"sources":["D:/SecureExplorer/client/src/user/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Sos from './Sos';\r\nimport axios from 'axios';\r\nimport L from 'leaflet';\r\nimport 'leaflet-routing-machine';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst MapComponent = () => {\r\n    const mapRef = useRef(null);\r\n    const [data, setData] = useState({});\r\n    const [error, setError] = useState(null);\r\n    const [sourceCoordinates, setSourceCoordinates] = useState(null);\r\n    const [destinationCoordinates, setDestinationCoordinates] = useState(null);\r\n    const [userIconMarker, setUserIconMarker] = useState(null);\r\n    const [routingControl, setRoutingControl] = useState(null); \r\n    const [isNavigated, setIsNavigated] = useState(false); \r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/auth/viewtripbyid', { id: location.state.id });\r\n            setData(response.data);\r\n\r\n            if (response.data.sourceStation && response.data.destinationStation) {\r\n                const sourceResult = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${response.data.sourceStation}`);\r\n                const destinationResult = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${response.data.destinationStation}`);\r\n                if (sourceResult.data.length > 0 && destinationResult.data.length > 0) {\r\n                    setSourceCoordinates([parseFloat(sourceResult.data[0].lat), parseFloat(sourceResult.data[0].lon)]);\r\n                    setDestinationCoordinates([parseFloat(destinationResult.data[0].lat), parseFloat(destinationResult.data[0].lon)]);\r\n                } else {\r\n                    setError(\"Source or destination coordinates not found\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [location.state.id]);\r\n\r\n    useEffect(() => {\r\n        if (sourceCoordinates && destinationCoordinates) {\r\n            if (!mapRef.current) {\r\n                mapRef.current = L.map('map').setView(sourceCoordinates, 11);\r\n                const mapLink = \"<a href='http://openstreetmap.org'>OpenStreetMap</a>\";\r\n                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    attribution: 'Leaflet &copy; ' + mapLink + ', contribution',\r\n                    maxZoom: 18\r\n                }).addTo(mapRef.current);\r\n            }\r\n\r\n            const map = mapRef.current;\r\n\r\n            // Add polyline to show shortest road between source and destination\r\n            const control = L.Routing.control({\r\n                waypoints: [\r\n                    L.latLng(sourceCoordinates),\r\n                    L.latLng(destinationCoordinates)\r\n                ],\r\n                routeWhileDragging: true,\r\n                lineOptions: {\r\n                    styles: [{ color: 'red', opacity: 0.7, weight: 5 }]\r\n                },\r\n                createMarker: function () { return null; }\r\n            });\r\n            setRoutingControl(control.addTo(map));\r\n\r\n            // Add marker for source and destination\r\n            L.marker(sourceCoordinates).addTo(map)\r\n                .bindPopup(`<b>Source:</b> ${data.sourceStation}`);\r\n\r\n            L.marker(destinationCoordinates).addTo(map)\r\n                .bindPopup(`<b>Destination:</b> ${data.destinationStation}`);\r\n\r\n            // Initialize user icon marker\r\n            const userIcon = L.icon({\r\n                iconUrl: data.photo,\r\n                iconSize: [40, 40],\r\n            });\r\n            setUserIconMarker(L.marker(sourceCoordinates, { icon: userIcon }).addTo(map));\r\n\r\n            map.fitBounds([sourceCoordinates, destinationCoordinates]);\r\n        }\r\n    }, [sourceCoordinates, destinationCoordinates]);\r\n\r\n    useEffect(() => {\r\n        if (userIconMarker && routingControl ) {\r\n            // Animate user icon marker along the route\r\n            routingControl.on('routesfound', function (e) {\r\n                const route = e.routes[0];\r\n                const index = 0;\r\n                const segment = route.coordinates[index];\r\n                moveMarker(segment, index + 1, route);\r\n            });\r\n        }\r\n    }, [userIconMarker, routingControl, sourceCoordinates, destinationCoordinates, ]);\r\n\r\n    const displayCoordinates = async () => {\r\n        if (userIconMarker) {\r\n            const coordinates = userIconMarker.getLatLng();\r\n            const response = await axios.get(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${coordinates.lat}&lon=${coordinates.lng}`);\r\n            const placeInfo = response.data.address;\r\n            const stateDistrict = placeInfo.state_district;\r\n            \r\n            try {\r\n                const userId = data._id;\r\n                await axios.post('http://localhost:5000/auth/submitalert', {\r\n                    userId: userId,\r\n                    coordinates: {\r\n                        stateDistrict: stateDistrict \r\n                    },\r\n\r\n                });\r\n            } catch (error) {\r\n                console.error('Error saving SOS request:', error);\r\n            }\r\n\t\t\tsetIsNavigated(true);\r\n            alert(`You are in ${stateDistrict}. Help will arrive in a few minutes.`);\r\n            navigate('/userhelp', { state: { data } });\r\n\r\n        }\r\n    };\r\n\r\n\tlet destinationReached = false; \r\n\r\n    async function moveMarker(segment, index, route) {\r\n        setTimeout(async function () {\r\n            if (!isNavigated) {\r\n                userIconMarker.setLatLng(L.latLng(segment.lat, segment.lng));\r\n                if (index < route.coordinates.length) {\r\n                    moveMarker(route.coordinates[index], index + 1, route);\r\n                } else {\r\n                    try {\r\n\t\t\t\t\t\tif (!destinationReached) {\r\n\t\t\t\t\t\t\ttoast.success(\"You have reached the destination successfully!\", {\r\n\t\t\t\t\t\t\t\ttoastId: 'destinationToast',\r\n\t\t\t\t\t\t\t\tonClose: async () => {\r\n\t\t\t\t\t\t\t\t\tdestinationReached = true;\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\tconst userId = data._id;\r\n\t\t\t\t\t\t\t\t\t\tawait axios.post('http://localhost:5000/auth/submitstatus', {\r\n\t\t\t\t\t\t\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\t\t\t\t\t\t\ttripStatus: 1\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Navigating to '/userhistory'...\");\r\n\t\t\t\t\t\t\t\t\t\tnavigate('/userhistory');\r\n\t\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tdestinationReached = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n                    } catch (error) {\r\n                        console.error(error);\r\n                    }                \r\n                }\r\n            }\r\n        }, 2); \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div>\r\n                {error ? (\r\n                    <div>Error: {error}</div>\r\n                ) : (\r\n                    <div id=\"map\" style={{ width: '100%', height: '100vh' }}></div>\r\n                )}\r\n            </div>\r\n            <Sos displayCoordinates={displayCoordinates} />\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MapComponent;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}